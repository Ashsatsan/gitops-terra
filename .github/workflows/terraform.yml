name: "Vprofile IAC"
on:
  push:
    branches:
       - main
       - stage
    paths:
       - terraform/**
  pull_request:
    branches:
       - main
    path:
       - terraform/**
  
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secret.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secret.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile1-eks
  
jobs:
   terraform:
      name: "Apply terraform code changes"
      runs-on: ubuntu-latest
      defaults:
          run: 
            shell: bash
            working-directory: ./terraform
          
          steps:
             - name: checkout source code
               uses: actions/checkout@v4
              
             - name: Setup terraform with specific version on the runner
               uses: hashicorp/setup-terraform@v2
               #with:
               #  terraform_version: 1.6.3

             - name: terraform init
               id: init
               run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

             - name: terraform fmt
               id: fmt
               run: terraform fmt -check

             - name: terraform validate
               id: validate
               run: terraform validate 

              - name: terraform plan
                id: plan
                run: terraform plan -no-color -input=false -out planfile

              - name: terraform plan status
                if: step.plan.outcome == "failure"
                run: exit 1

              - name: terraform apply
                id: apply
                if: github.ref == "ref/head/main" && github.event_name == "push"
                run: terraform apply -auto-approve -input=false -parallelism=1 planfile
                 
               - name: Configure AWS credentials
                 uses: aws-actions/configure-aws-credentials@v1
                 with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: ${{ env.AWS_REGION }}

               - name: Get Kube config file
                 id: getconfig
                 if: steps.apple.outcome == 'success'
                 run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

               - name: Install Ingress controller
                 if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'
                 run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml


